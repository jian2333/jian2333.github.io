<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hi,Jianww</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jian2333.github.io/"/>
  <updated>2019-05-15T07:55:56.757Z</updated>
  <id>http://jian2333.github.io/</id>
  
  <author>
    <name>Jianww</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://jian2333.github.io/2019/05/14/hello-hexo/"/>
    <id>http://jian2333.github.io/2019/05/14/hello-hexo/</id>
    <published>2019-05-14T11:46:17.000Z</published>
    <updated>2019-05-15T07:55:56.757Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><p>关于 hexo 的一次踩坑总结。</p><a id="more"></a><p>之前一直是在自己搭的网站写博客，markdown写好后用编辑器转成 html 格式，然后直接扔上去。emmmmm… 巨丑。</p><p>后来决定弄个漂亮点的博客，研究了下，决定用 hexo + github 来部署。看完文档感觉挺简单，结果花了几天时间才弄好，中间也碰到几个坑，记录一下。</p><h3 id="npm-权限问题"><a href="#npm-权限问题" class="headerlink" title="npm 权限问题"></a>npm 权限问题</h3><p>因为之前安装 node 的时候自动安装了 npm ， 然后 Mac 下 npm 是默认安装在 <code>/usr/local/</code> 路径下的，而该路径下很多目录和文件时 <strong>只读的</strong> ，然后在安装 hexo 的时候，会报权限错误；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 此处会报权限错误</span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>网上找了一下，主要有四种解决方法：</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>为当前用户添加 <code>npm安装目录</code> 下所有文件的写权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R (whoami)(npm config get prefix)/&#123;lib/node_modules,bin,share&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong> ：如果路径是 <code>/usr/local/</code> 的话不推荐这种方式，因为改权限会弄乱系统的权限，以后可能导致奇怪的错误(比如无法跟当前系统的其他用户共享)。</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>把 <strong>npm</strong> 卸载，并安装在一个有读写权限的路径下；</p><p>推荐 <code>~/.npm-global</code> 路径下；</p><p>1.新建一个全局安装的路径；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.npm-global</span><br></pre></td></tr></table></figure><p>2.配置 npm 使用新的路径；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">'~/.npm-global'</span></span><br></pre></td></tr></table></figure><p>3.打开或者新建 <code>~/.profile</code> ，加入下面一行；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=~/.npm-global/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>4.重新启动终端；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.profile</span><br></pre></td></tr></table></figure><p>5.测试：安装一个全局包试试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g jslint</span><br><span class="line"></span><br><span class="line">[luncher@localhost aaa]$ ls ~/.npm-global/bin/</span><br><span class="line">jshint</span><br><span class="line">[luncher@localhost aaa]$</span><br></pre></td></tr></table></figure><h4 id="方法三-推荐"><a href="#方法三-推荐" class="headerlink" title="方法三(推荐)"></a>方法三(推荐)</h4><p>使用 <strong>nvm</strong> 。nvm 可以在一台电脑上管理不同版本的 node，并且使用 nvm 安装 npm 后，npm 默认的安装路径是有读写权限的，也就是说，以后 npm 安装任何包都用再使用 <code>sudo</code> 参数了。</p><p>官网的解决方案：<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener"><a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally</a></a>；</p><p>这里有个细节要注意：如果你本地已经安装了npm，你得先把本地的npm卸载，再安装nvm，再使用nvm安装npm；</p><p><strong>1.卸载已安装到全局的 node/npm</strong></p><p>node 命令在 <code>/usr/local/bin/node</code>，npm 命令在 <code>/usr/local/lib/node_modules/npm</code> 下；</p><p>查看已经安装的全局模块，以便卸载后再按不同的 node 版本重新安装；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls -g --depth=0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/lib/node_modules<span class="comment">#删除全局 node_modules 目录</span></span><br><span class="line">sudo rm /usr/<span class="built_in">local</span>/bin/node<span class="comment">#删除 node</span></span><br><span class="line"><span class="built_in">cd</span>  /usr/<span class="built_in">local</span>/bin &amp;&amp; ls -l | grep <span class="string">"../lib/node_modules/"</span> | awk <span class="string">'&#123;print $9&#125;'</span>| xargs rm <span class="comment">#删除全局 node 模块注册的软链</span></span><br></pre></td></tr></table></figure><p><strong>2.安装 nvm</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash</span><br></pre></td></tr></table></figure><h4 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h4><p>借助第三方工具安装 node</p><ul><li>mac 系统借助 <strong>brew</strong> 安装 <code>node</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><ul><li>centos 系统借助 <strong>yum</strong> 安装 <code>node</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install node</span><br></pre></td></tr></table></figure><h3 id="部署分支问题"><a href="#部署分支问题" class="headerlink" title="部署分支问题"></a>部署分支问题</h3><p>由于 hexo 部署(<code>hexo d</code>) 的原理是，把站点上的所有静态文件删除，并把本地待部署的全部静态站点文件(/public/目录下) push 到远程库上，即完全覆盖；所以 hexo 官方文档有这样一句话 <strong>建议使用master作为写作分支，新建一个public分支作为发布分支</strong>。在按照这样创建分支后，发现网站打不开，然后在github的文档里看到这样几句话：</p><ul><li>Reponsitory 必须以 username.github.io 命令，这个username为github的账户名，网站部署成功后，使用 <a href="http://username.github.io" target="_blank" rel="noopener">http://username.github.io</a> 进行访问；</li><li>必须使用 <strong>master</strong> 分支管理网站静态文件。注意这句话，必须使用 <strong>master</strong> 分支。emmmmm….. 就是这么坑。</li></ul><p>所以，github的建议是：</p><p>使用 <strong>master</strong> 作为发布分支，使用 <strong>hexo</strong> 作为写作分支。</p><h3 id="Hexo-的使用"><a href="#Hexo-的使用" class="headerlink" title="Hexo 的使用"></a>Hexo 的使用</h3><p>Hexo 的使用流程一般如下：</p><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a></p><p>1.安装 hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>2.创建 项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>3.新建 文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>4.生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">// or</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>5.本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">// or </span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>6.部署到服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br><span class="line">// or </span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="关于主题"><a href="#关于主题" class="headerlink" title="关于主题"></a>关于主题</h3><p>主题的使用很简单，以下几个步骤即可：</p><p>1.clone 主题到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your_blog_dir</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/DIYgod/hexo-theme-sagiri.git themes/sagiri</span><br></pre></td></tr></table></figure><p>2.修改 hexo 配置文件使用主题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: sagiri</span><br></pre></td></tr></table></figure><p>3.修改 主题配置文件，进行个性化设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// 路径为：your_blog_dir/themes/sagiri/_config.yml</span><br></pre></td></tr></table></figure><h3 id="推荐主题"><a href="#推荐主题" class="headerlink" title="推荐主题"></a>推荐主题</h3><p>搜集了一些比较好看的主题：</p><p><a href="https://github.com/DIYgod/hexo-theme-sagiri" target="_blank" rel="noopener"><strong>sagiri</strong></a> ：<a href="https://diygod.me/" target="_blank" rel="noopener">https://diygod.me</a></p><p><a href="https://xaoxuu.com/wiki/material-x/" target="_blank" rel="noopener"><strong>Material X</strong></a> ：<a href="https://xaoxuu.com" target="_blank" rel="noopener">https://xaoxuu.com</a></p><p><strong><a href="https://github.com/elmorec/hexo-theme-inside" target="_blank" rel="noopener">Inside</a></strong> ：<a href="https://blog.oniuo.com" target="_blank" rel="noopener">https://blog.oniuo.com</a></p><p><strong>unknown</strong> ：<a href="https://blog.tolvyou.cn" target="_blank" rel="noopener">https://blog.tolvyou.cn</a></p><h3 id="旧版博客"><a href="#旧版博客" class="headerlink" title="旧版博客"></a>旧版博客</h3><p>最后，就是巨丑的<a href="http://www.jianwill.cn" target="_blank" rel="noopener">旧版博客</a>了…….</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hello-Hexo&quot;&gt;&lt;a href=&quot;#Hello-Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hello Hexo&quot;&gt;&lt;/a&gt;Hello Hexo&lt;/h2&gt;&lt;p&gt;关于 hexo 的一次踩坑总结。&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://jian2333.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="http://jian2333.github.io/tags/hexo/"/>
    
      <category term="web前端" scheme="http://jian2333.github.io/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://jian2333.github.io/2019/05/13/hello-world/"/>
    <id>http://jian2333.github.io/2019/05/13/hello-world/</id>
    <published>2019-05-13T11:46:17.000Z</published>
    <updated>2019-05-15T07:59:34.454Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://jian2333.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="http://jian2333.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
