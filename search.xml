<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[每天一个Linux命令]]></title>
    <url>%2F2019%2F05%2F16%2FLinux-Command%2F</url>
    <content type="text"><![CDATA[最近在学一个系列，每天一个 Linux 命令由于之前的笔记是写在 旧版博客 上的所以这里就不重新整理一份了，hahaha ~直接，传送门(๑•̀ㅂ•́)و✧]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于 hexo 的一次踩坑之旅]]></title>
    <url>%2F2019%2F05%2F14%2Fhello-hexo%2F</url>
    <content type="text"><![CDATA[关于 hexo 的一次踩坑之旅。之前一直是在自己搭的网站写博客，markdown写好后用编辑器转成 html 格式，然后直接扔上去。emmmmm… 巨丑。后来决定弄个漂亮点的博客，研究了下，决定用 hexo + github 来部署。看完文档感觉挺简单，结果花了几天时间才弄好，中间也碰到几个坑，记录一下。npm 权限问题因为之前安装 node 的时候自动安装了 npm ， 然后 Mac 下 npm 是默认安装在 /usr/local/ 路径下的，而该路径下很多目录和文件时 只读的 ，然后在安装 hexo 的时候，会报权限错误；12// 此处会报权限错误npm install -g hexo-cli解决方法网上找了一下，主要有四种解决方法：方法一为当前用户添加 npm安装目录 下所有文件的写权限。1sudo chown -R (whoami)(npm config get prefix)/&#123;lib/node_modules,bin,share&#125;注意 ：如果路径是 /usr/local/ 的话不推荐这种方式，因为改权限会弄乱系统的权限，以后可能导致奇怪的错误(比如无法跟当前系统的其他用户共享)。方法二把 npm 卸载，并安装在一个有读写权限的路径下；推荐 ~/.npm-global 路径下；1.新建一个全局安装的路径；1mkdir ~/.npm-global2.配置 npm 使用新的路径；1npm config set prefix '~/.npm-global'3.打开或者新建 ~/.profile ，加入下面一行；1export PATH=~/.npm-global/bin:$PATH4.重新启动终端；1source ~/.profile5.测试：安装一个全局包试试12345npm install -g jslint[luncher@localhost aaa]$ ls ~/.npm-global/bin/jshint[luncher@localhost aaa]$方法三(推荐)使用 nvm 。nvm 可以在一台电脑上管理不同版本的 node，并且使用 nvm 安装 npm 后，npm 默认的安装路径是有读写权限的，也就是说，以后 npm 安装任何包都不用再使用 sudo 参数了。官网的解决方案：https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally；这里有个细节要注意：如果你本地已经安装了npm，你得先把本地的npm卸载，再安装nvm，再使用nvm安装npm；1.卸载已安装到全局的 node/npmnode 命令在 /usr/local/bin/node，npm 命令在 /usr/local/lib/node_modules/npm 下；查看已经安装的全局模块，以便卸载后再按不同的 node 版本重新安装；1npm ls -g --depth=0123sudo rm -rf /usr/local/lib/node_modules #删除全局 node_modules 目录sudo rm /usr/local/bin/node #删除 nodecd /usr/local/bin &amp;&amp; ls -l | grep "../lib/node_modules/" | awk '&#123;print $9&#125;'| xargs rm #删除全局 node 模块注册的软链2.安装 nvm1curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash方法四借助第三方工具安装 nodemac 系统借助 brew 安装 node1brew install nodecentos 系统借助 yum 安装 node1yum install node部署分支问题由于 hexo 部署(hexo d) 的原理是，把站点上的所有静态文件删除，并把本地待部署的全部静态站点文件(/public/目录下) push 到远程库上，即完全覆盖；所以 hexo 官方文档有这样一句话 建议使用 master 作为写作分支，新建一个 public 分支作为发布分支。在按照这样创建分支后，发现网站打不开，然后在 github pages 的文档里看到这样几句话：Reponsitory 必须以 username.github.io 命令，这个 username 为 github 的账户名，网站部署成功后，使用 http://username.github.io 进行访问；必须使用 master 分支管理网站静态文件。注意这句话，必须使用 master 分支。emmmmm….. 就是这么坑。所以，github的建议是：使用 master 作为发布分支，使用 hexo 作为写作分支。Hexo 的使用Hexo 的使用流程一般如下：官方文档1.安装 hexo1npm install -g hexo-cli2.创建 项目123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install3.新建 文章1hexo new [layout] &lt;title&gt;4.生成静态文件123hexo g// orhexo generate5.本地预览123hexo s// or hexo server6.部署到服务器123hexo d// or hexo deploy关于主题主题的使用很简单，以下几个步骤即可：1.clone 主题到本地12cd your_blog_dirgit clone https://github.com/DIYgod/hexo-theme-sagiri.git themes/sagiri2.修改 hexo 配置文件使用主题12## Themes: https://hexo.io/themes/theme: sagiri3.修改 主题配置文件，进行个性化设置1// 路径为：your_blog_dir/themes/sagiri/_config.yml推荐主题搜集了一些比较好看的主题：sagiri ：https://diygod.meMaterial X ：https://xaoxuu.comInside ：https://blog.oniuo.comNext ：https://blog.tolvyou.cn旧版博客最后，就是巨丑的旧版博客了…….]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>web前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搬家啦]]></title>
    <url>%2F2019%2F05%2F13%2FMigrate-Blog%2F</url>
    <content type="text"><![CDATA[博客搬家啦新博客使用 hexo + github pages 来搭建关于旧博客，对，就是巨丑的那个 ~~点我！点我就能看 ….(づ｡◕‿‿◕｡)づ————————– 分 割 线 ————————–补充一下由于旧博客不是用 博客框架 ( Hexo，Jekyll，Wordpress )搭建的所以很多文章不是用 markdown 写的，部分用 markdown 写的文章也由于内容太长然后，迁移起来就比较麻烦…o(╯□╰)o所以，就直接给个链接代替了..hahaha ~]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F05%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
